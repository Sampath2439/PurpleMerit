version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: marketing_postgres
    environment:
      POSTGRES_DB: marketing_system
      POSTGRES_USER: marketing_user
      POSTGRES_PASSWORD: marketing_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - marketing_network
    restart: unless-stopped

  # MySQL Database (Alternative)
  mysql:
    image: mysql:8.0
    container_name: marketing_mysql
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: marketing_system
      MYSQL_USER: marketing_user
      MYSQL_PASSWORD: marketing_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - marketing_network
    restart: unless-stopped
    profiles:
      - mysql

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: marketing_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - marketing_network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # pgAdmin (PostgreSQL Admin Interface)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: marketing_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@marketing.com
      PGADMIN_DEFAULT_PASSWORD: admin_password
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - marketing_network
    restart: unless-stopped
    depends_on:
      - postgres
    profiles:
      - admin

volumes:
  postgres_data:
  mysql_data:
  redis_data:
  pgadmin_data:

networks:
  marketing_network:
    driver: bridge
